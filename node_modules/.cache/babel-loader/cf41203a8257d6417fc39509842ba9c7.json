{"ast":null,"code":"var _jsxFileName = \"/home/apiiit-rkv/Desktop/contacts-project/src/components/AddContact/index.js\";\nimport { v4 as uuidv4 } from 'uuid';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport emailRegex from 'email-regex';\nimport { Component } from 'react';\nimport Header from '../Header';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass AddContact extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: '',\n      email: '',\n      contactNumber: '',\n      contactType: '',\n      showSubmitError: false,\n      errorText: 'Please fill required details'\n    };\n\n    this.onChangeName = event => {\n      this.setState({\n        name: event.target.value\n      });\n    };\n\n    this.onChangeEmail = event => {\n      this.setState({\n        email: event.target.value\n      });\n    };\n\n    this.onChangeContactNumber = event => {\n      this.setState({\n        contactNumber: event.target.value\n      });\n    };\n\n    this.onSelectContactType = event => {\n      const {\n        value\n      } = event.target;\n      this.setState({\n        contactType: value\n      });\n    };\n\n    this.onAddContact = event => {\n      event.preventDefault();\n      const {\n        name,\n        email,\n        contactType,\n        contactNumber\n      } = this.state;\n\n      if (name !== '' && email !== '' && contactType !== '' && contactNumber !== '') {\n        const newContact = {\n          id: uuidv4(),\n          name: name,\n          email: email,\n          contact_number: contactNumber,\n          contact_type: contactType\n        };\n        this.validateContactDetails(newContact);\n      } else {\n        this.setState({\n          showSubmitError: true,\n          errorText: 'Please fill required details'\n        });\n      }\n    };\n\n    this.checkEmail = email => {\n      return emailRegex().test(email);\n    };\n\n    this.checkContactNumber = contactNumber => {\n      if (contactNumber.length === 10 && !isNaN(Number(contactNumber))) {\n        return true;\n      } else {\n        return false;\n      }\n    };\n\n    this.validateContactDetails = newContact => {\n      const {\n        email,\n        contactNumber\n      } = this.state;\n\n      if (this.checkEmail(email) && this.checkContactNumber(contactNumber)) {\n        this.setState({\n          errorText: \"\",\n          showSubmitError: false\n        }, this.addContactDetails(newContact));\n      } else {\n        if (!this.checkEmail(email) && !this.checkContactNumber(contactNumber)) {\n          this.setState({\n            errorText: \"Please fill valid email, contact number\",\n            showSubmitError: true\n          });\n        } else if (!this.checkEmail(email)) {\n          this.setState({\n            errorText: \"Please fill valid email\",\n            showSubmitError: true\n          });\n        } else if (!this.checkContactNumber(contactNumber)) {\n          this.setState({\n            errorText: \"Please fill 10 digit valid contact number\",\n            showSubmitError: true\n          });\n        }\n      }\n    };\n\n    this.addContactDetails = newContact => {\n      const previousContacts = localStorage.getItem(\"contacts\");\n\n      if (previousContacts === null) {\n        const updatedContacts = [newContact];\n        const strigifiedData = JSON.stringify(updatedContacts);\n        localStorage.setItem('contacts', strigifiedData);\n      } else {\n        const currentContacts = JSON.parse(previousContacts);\n        const updatedContacts = [...currentContacts, newContact];\n        const strigifiedData = JSON.stringify(updatedContacts);\n        localStorage.setItem('contacts', strigifiedData);\n      }\n\n      this.initializeAllFields();\n      this.displayToaster();\n    };\n\n    this.displayToaster = () => toast( /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"toaster-text\",\n      children: \"Contact Updated Succesfully!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 28\n    }, this), {\n      position: \"top-center\",\n      autoClose: 2000,\n      hideProgressBar: true,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined\n    });\n\n    this.initializeAllFields = () => {\n      this.setState({\n        name: '',\n        email: '',\n        contactNumber: '',\n        contactType: '',\n        showSubmitError: false\n      });\n    };\n\n    this.renderNameField = () => {\n      const {\n        name\n      } = this.state;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contact-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"input-label\",\n          htmlFor: \"name\",\n          children: \"NAME*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          className: \"name-input-field\",\n          value: name,\n          onChange: this.onChangeName,\n          placeholder: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 7\n      }, this);\n    };\n\n    this.renderEmailField = () => {\n      const {\n        email\n      } = this.state;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contact-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"input-label\",\n          htmlFor: \"email\",\n          children: \"EMAIL*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"email\",\n          className: \"email-input-field\",\n          value: email,\n          onChange: this.onChangeEmail,\n          placeholder: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 7\n      }, this);\n    };\n\n    this.renderContactNumberField = () => {\n      const {\n        contactNumber\n      } = this.state;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contact-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"input-label\",\n          htmlFor: \"contactNumber\",\n          children: \"CONTACT NUMBER*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"contactNumber\",\n          className: \"contact-number-input-field\",\n          value: contactNumber,\n          onChange: this.onChangeContactNumber,\n          placeholder: \"Contact Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 7\n      }, this);\n    };\n\n    this.renderContactTypeOptions = () => {\n      const {\n        contactType\n      } = this.state;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contact-details\",\n        name: \"contactTypeOptions\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"contact-type\",\n          children: \"CONTACT TYPE*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"contact-type-option\",\n          children: [\"\\xA0 \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            id: \"business\",\n            name: \"contactType\",\n            checked: contactType === 'Business',\n            className: \"contact-type-radio-button\",\n            value: \"Business\",\n            onChange: this.onSelectContactType\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 11\n          }, this), \"\\xA0 \", /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"business\",\n            className: \"contact-type-label\",\n            children: \"Business\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"contact-type-option\",\n          children: [\"\\xA0 \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            id: \"css\",\n            name: \"contactType\",\n            checked: contactType === 'Personal',\n            className: \"contact-type-radio-button\",\n            value: \"Personal\",\n            onChange: this.onSelectContactType\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 11\n          }, this), \"\\xA0 \", /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"personal\",\n            className: \"contact-type-label\",\n            children: \"Personal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 7\n      }, this);\n    };\n  }\n\n  render() {\n    const {\n      showSubmitError,\n      errorText\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-contact-form-container\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"add-contact-form\",\n          onSubmit: this.onAddContact,\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"heading-text\",\n            children: \"Add Contact\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-container\",\n            children: this.renderNameField()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-container\",\n            children: this.renderEmailField()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-container\",\n            children: this.renderContactNumberField()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-container\",\n            children: this.renderContactTypeOptions()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"required-fields-text\",\n            children: \"*Required Fields\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"add-btn-container\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"add-contact-btn\",\n              children: \"Add Contact\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 11\n          }, this), showSubmitError && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error-message\",\n            children: [\"*\", errorText]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default AddContact;","map":{"version":3,"sources":["/home/apiiit-rkv/Desktop/contacts-project/src/components/AddContact/index.js"],"names":["v4","uuidv4","ToastContainer","toast","emailRegex","Component","Header","AddContact","state","name","email","contactNumber","contactType","showSubmitError","errorText","onChangeName","event","setState","target","value","onChangeEmail","onChangeContactNumber","onSelectContactType","onAddContact","preventDefault","newContact","id","contact_number","contact_type","validateContactDetails","checkEmail","test","checkContactNumber","length","isNaN","Number","addContactDetails","previousContacts","localStorage","getItem","updatedContacts","strigifiedData","JSON","stringify","setItem","currentContacts","parse","initializeAllFields","displayToaster","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","renderNameField","renderEmailField","renderContactNumberField","renderContactTypeOptions","render"],"mappings":"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","sourcesContent":["import {v4 as uuidv4} from 'uuid'\nimport { ToastContainer,toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport emailRegex from 'email-regex';\nimport {Component} from 'react'\nimport Header from '../Header'\n\nimport './index.css'\n\nclass AddContact extends Component {\n  state = {\n    name: '',\n    email: '',\n    contactNumber:'',\n    contactType:'',\n    showSubmitError: false,\n    errorText:'Please fill required details'\n  }\n\n\n  onChangeName = event => {\n    this.setState({name: event.target.value})\n  }\n\n  onChangeEmail = event => {\n    this.setState({email: event.target.value})\n  }\n\n  onChangeContactNumber = event => {\n    this.setState({contactNumber: event.target.value})\n  }\n\n  onSelectContactType=(event)=>{\n    const { value } = event.target;\n    this.setState({\n      contactType: value\n    });\n  }\n\n  onAddContact = (event) => {\n    event.preventDefault()\n    const {name,email,contactType,contactNumber} = this.state\n    if(name!=='' && email!=='' && contactType!=='' && contactNumber!==''){\n      const newContact={\n        id:uuidv4(),\n        name:name,\n        email:email,\n        contact_number:contactNumber,\n        contact_type:contactType,\n    }\n    this.validateContactDetails(newContact)\n    }\n    else{\n      this.setState({showSubmitError:true,errorText:'Please fill required details'})\n    } \n  }\n  checkEmail=(email)=>{\n    return emailRegex().test(email);\n  }\n  checkContactNumber=(contactNumber)=>{\n    if(contactNumber.length===10 && !isNaN(Number(contactNumber))){\n      return true;\n    }\n    else{\n      return false;\n    }\n    }\n  validateContactDetails=(newContact)=>{\n    const {email,contactNumber} = this.state\n      if(this.checkEmail(email) && this.checkContactNumber(contactNumber)){\n        this.setState({errorText:\"\",showSubmitError:false},this.addContactDetails(newContact))\n      }\n      else{\n        if(!this.checkEmail(email) && !this.checkContactNumber(contactNumber)){\n          this.setState({errorText:\"Please fill valid email, contact number\",showSubmitError:true})\n          }\n          else if(!this.checkEmail(email)){\n          this.setState({errorText:\"Please fill valid email\",showSubmitError:true})\n          }\n          else if(!this.checkContactNumber(contactNumber)){\n          this.setState({errorText:\"Please fill 10 digit valid contact number\",showSubmitError:true})\n          }\n      }\n  }\n  addContactDetails=(newContact)=>{\n    const previousContacts=localStorage.getItem(\"contacts\");\n    if(previousContacts===null){\n        const updatedContacts=[newContact]\n        const strigifiedData=JSON.stringify(updatedContacts)\n        localStorage.setItem('contacts',strigifiedData)\n    }\n    else{\n        const currentContacts=JSON.parse(previousContacts)\n        const updatedContacts=[...currentContacts,newContact]\n        const strigifiedData=JSON.stringify(updatedContacts)\n        localStorage.setItem('contacts',strigifiedData)\n    }\n    this.initializeAllFields()\n    this.displayToaster()\n  }\n\n  displayToaster=()=>toast(<div className=\"toaster-text\">Contact Updated Succesfully!</div>,{\n    position: \"top-center\",\n    autoClose: 2000,\n    hideProgressBar: true,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n    })\n\n  initializeAllFields=()=>{\n    this.setState({\n      name: '',\n      email: '',\n      contactNumber:'',\n      contactType:'',\n      showSubmitError: false,\n    })\n  }\n\n  renderNameField = () => {\n    const {name} = this.state\n    return (\n      <div className=\"contact-details\">\n        <label className=\"input-label\" htmlFor=\"name\">\n          NAME*\n        </label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          className=\"name-input-field\"\n          value={name}\n          onChange={this.onChangeName}\n          placeholder=\"Name\"\n        />\n      </div>\n    )\n  }\n\n  renderEmailField = () => {\n    const {email} = this.state\n    return (\n      <div className=\"contact-details\">\n        <label className=\"input-label\" htmlFor=\"email\">\n          EMAIL*\n        </label>\n        <input\n          type=\"text\"\n          id=\"email\"\n          className=\"email-input-field\"\n          value={email}\n          onChange={this.onChangeEmail}\n          placeholder=\"Email\"\n        />\n      </div>\n    )\n  }\n\n  renderContactNumberField = () => {\n    const {contactNumber} = this.state\n    return (\n      <div className=\"contact-details\">\n        <label className=\"input-label\" htmlFor=\"contactNumber\">\n          CONTACT NUMBER*\n        </label>\n        <input\n          type=\"text\"\n          id=\"contactNumber\"\n          className=\"contact-number-input-field\"\n          value={contactNumber}\n          onChange={this.onChangeContactNumber}\n          placeholder=\"Contact Number\"\n        />\n      </div>\n    )\n  }\n\n  renderContactTypeOptions = () => {\n    const {contactType}=this.state\n    return (\n      <div className=\"contact-details\" name=\"contactTypeOptions\">\n        <p className=\"contact-type\">CONTACT TYPE*</p>\n        <div className=\"contact-type-option\">\n          <input type=\"radio\" id=\"business\" name=\"contactType\" checked={contactType==='Business'} className=\"contact-type-radio-button\" value=\"Business\" onChange={this.onSelectContactType}/>\n          <label htmlFor=\"business\" className=\"contact-type-label\">Business</label>\n        </div>\n        <div  className=\"contact-type-option\">\n          <input type=\"radio\" id=\"css\" name=\"contactType\" checked={contactType==='Personal'} className=\"contact-type-radio-button\" value=\"Personal\" onChange={this.onSelectContactType}/>\n          <label htmlFor=\"personal\"  className=\"contact-type-label\">Personal</label>\n        </div>\n      </div>\n    )\n  }\n  \n  render() {\n      const {showSubmitError,errorText}=this.state\n    return (\n        <>\n        <Header/>\n      <div className=\"add-contact-form-container\">\n        <form className=\"add-contact-form\" onSubmit={this.onAddContact}>\n          <h1 className=\"heading-text\">Add Contact</h1>\n          <div className=\"input-container\">{this.renderNameField()}</div>\n          <div className=\"input-container\">{this.renderEmailField()}</div>\n          <div className=\"input-container\">{this.renderContactNumberField()}</div>\n          <div className=\"input-container\">{this.renderContactTypeOptions()}</div>\n          <p className=\"required-fields-text\">*Required Fields</p>\n          <div className=\"add-btn-container\">\n          <button type=\"submit\" className=\"add-contact-btn\">\n            Add Contact\n          </button>\n          </div>\n          {showSubmitError && <p className=\"error-message\">*{errorText}</p>}\n        <ToastContainer />\n        </form>\n      </div>\n      </>\n    )\n  }\n}\n\nexport default AddContact"]},"metadata":{},"sourceType":"module"}